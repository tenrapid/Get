
var exif_exifParser = function(buffer, callback) {
	var parser = require('exif-parser').create(buffer),
		exifData,
		exif,
		err;

	try {
		exifData = parser.parse();
		
		exif = {
			orientation: exifData.tags.Orientation
		};

		if (exifData.tags.GPSLatitude && Math.abs(exifData.tags.GPSLatitude) <= 90 &&
			exifData.tags.GPSLongitude && Math.abs(exifData.tags.GPSLongitude) <= 180) {
			exif.latitude = exifData.tags.GPSLatitude;
			exif.longitude = exifData.tags.GPSLongitude;
		}
	}
	catch (e) {
		err = e;
	}
	
	callback(err, exif);
};

var exif_exif = function(buffer, callback) {
	var ExifImage = require('exif').ExifImage,
		lat,
		lon,
		latSgn,
		lonSgn,
		exif;

	new ExifImage({ image: buffer }, function (err, exifData) {
		if (!err) {
			exif = {
				orientation: exifData.image.Orientation
			};

			lat = exifData.gps.GPSLatitude;
			lon = exifData.gps.GPSLongitude;
			latSgn = exifData.gps.GPSLatitudeRef === 'N' ? 1 : -1;
			lonSgn = exifData.gps.GPSLongitudeRef === 'E' ? 1 : -1;

			if (lat && lon && Math.abs(lat[0]) < 90 && Math.abs(lon[0]) < 180 ) {
				exif.longitude = lonSgn * (lon[0] + lon[1] / 60 + lon[2] / 3600);
				exif.latitude = latSgn * (lat[0] + lat[1] / 60 + lat[2] / 3600);
			}
		}
		callback(err, exif);
	});

};

var imageInfo = function(file, callback) {
	var async = require('async'),
		sizeOf = require('image-size'),
		fs = require('fs'),
		buffer = new Buffer(66536),
		fd;

	async.waterfall([
		function(callback) {
			fs.open(file, 'r', callback);
		},
		function(_fd, callback) {
			fd = _fd;
			fs.read(fd, buffer, 0, 66536, 0, function(err) {
				callback(err);
			});
		},
		function(callback) {
			var size, 
				err;
			try {
				size = sizeOf(buffer);
			}
			catch (e) {
				err = e;
			}
			callback(err, size);
		},
		function(size, callback) {
			exif_exif(buffer, function(err, exif) {
				callback(err, size, exif);
			});
		}
	], function(err, size, exif) {
		var info;

		if (!err) {
			info = {
				width: size.width,
				height: size.height,
				type: size.type,
				orientation: exif.orientation
			};
			if (exif.latitude !== undefined && exif.longitude !== undefined) {
				info.latitude = exif.latitude;
				info.longitude = exif.longitude;
			}
		}
		if (fd) {
			fs.closeSync(fd);
		}
		callback(err, info);
	});	

};

module.exports = imageInfo;